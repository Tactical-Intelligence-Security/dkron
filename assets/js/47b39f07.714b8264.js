"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3780],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return d}});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),u=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=u(r),d=a,k=p["".concat(s,".").concat(d)]||p[d]||m[d]||o;return r?n.createElement(k,i(i({ref:t},c),{},{components:r})):n.createElement(k,i({ref:t},c))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var u=2;u<o;u++)i[u]=r[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},84874:function(e,t,r){r.r(t),r.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return m}});var n=r(87462),a=r(63366),o=(r(67294),r(3905)),i=["components"],l={title:"Metrics"},s=void 0,u={unversionedId:"usage/metrics",id:"usage/metrics",title:"Metrics",description:"Dkron has the ability to send metrics to Statsd for dashboards and historical reporting or provide prometheus format metrics via the api. It sends job processing metrics, golang, and serf metrics.",source:"@site/docs/usage/metrics.md",sourceDirName:"usage",slug:"/usage/metrics",permalink:"/docs/usage/metrics",editUrl:"https://github.com/distribworks/dkron/tree/main/website/docs/docs/usage/metrics.md",tags:[],version:"current",frontMatter:{title:"Metrics"},sidebar:"tutorialSidebar",previous:{title:"Job metadata",permalink:"/docs/usage/metatags"},next:{title:"Plugins",permalink:"/docs/usage/plugins/"}},c={},m=[{value:"Configuration",id:"configuration",level:2},{value:"Statsd",id:"statsd",level:3},{value:"Prometheus",id:"prometheus",level:3},{value:"Metrics",id:"metrics",level:2}],p={toc:m};function d(e){var t=e.components,r=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Dkron has the ability to send metrics to Statsd for dashboards and historical reporting or provide prometheus format metrics via the api. It sends job processing metrics, golang, and serf metrics."),(0,o.kt)("h2",{id:"configuration"},"Configuration"),(0,o.kt)("h3",{id:"statsd"},"Statsd"),(0,o.kt)("p",null,"Add this in your yaml config file to enable statsd metrics."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'statsd-addr: "localhost:8125"\n# Or for datadog statsd\ndog-statsd-addr: "localhost:8125"\n')),(0,o.kt)("h3",{id:"prometheus"},"Prometheus"),(0,o.kt)("p",null,"Add this to your yaml config file to enable serving prometheus metrics at the endpoint ",(0,o.kt)("inlineCode",{parentName:"p"},"/metrics")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"enable-prometheus: true\n")),(0,o.kt)("p",null,"Additionally, in your Prometheus config file (prometheus.yml), add the following to link dkron metric endpoint"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'scrape_configs:\n  ... #initial configuration\n  \n  - job_name: "dkron_metrics"\n    # metrics_path defaults to \'/metrics\'\n    static_configs:\n      - targets: ["localhost:6080"]\n')),(0,o.kt)("h2",{id:"metrics"},"Metrics"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"dkron.agent.event_received.query_execution_done"),(0,o.kt)("li",{parentName:"ul"},"dkron.agent.event_received.query_run_job"),(0,o.kt)("li",{parentName:"ul"},"dkron.memberlist.gossip"),(0,o.kt)("li",{parentName:"ul"},"dkron.memberlist.probeNode"),(0,o.kt)("li",{parentName:"ul"},"dkron.memberlist.pushPullNode"),(0,o.kt)("li",{parentName:"ul"},"dkron.memberlist.tcp.accept"),(0,o.kt)("li",{parentName:"ul"},"dkron.memberlist.tcp.connect"),(0,o.kt)("li",{parentName:"ul"},"dkron.memberlist.tcp.sent"),(0,o.kt)("li",{parentName:"ul"},"dkron.memberlist.udp.received"),(0,o.kt)("li",{parentName:"ul"},"dkron.memberlist.udp.sent"),(0,o.kt)("li",{parentName:"ul"},"dkron.grpc.call_execution_done"),(0,o.kt)("li",{parentName:"ul"},"dkron.grpc.call_get_job"),(0,o.kt)("li",{parentName:"ul"},"dkron.grpc.execution_done"),(0,o.kt)("li",{parentName:"ul"},"dkron.grpc.get_job"),(0,o.kt)("li",{parentName:"ul"},"dkron.runtime.alloc_bytes"),(0,o.kt)("li",{parentName:"ul"},"dkron.runtime.free_count"),(0,o.kt)("li",{parentName:"ul"},"dkron.runtime.gc_pause_ns"),(0,o.kt)("li",{parentName:"ul"},"dkron.runtime.heap_objects"),(0,o.kt)("li",{parentName:"ul"},"dkron.runtime.malloc_count"),(0,o.kt)("li",{parentName:"ul"},"dkron.runtime.num_goroutines"),(0,o.kt)("li",{parentName:"ul"},"dkron.runtime.sys_bytes"),(0,o.kt)("li",{parentName:"ul"},"dkron.runtime.total_gc_pause_ns"),(0,o.kt)("li",{parentName:"ul"},"dkron.runtime.total_gc_runs"),(0,o.kt)("li",{parentName:"ul"},"dkron.serf.coordinate.adjustment_ms"),(0,o.kt)("li",{parentName:"ul"},"dkron.serf.msgs.received"),(0,o.kt)("li",{parentName:"ul"},"dkron.serf.msgs.sent"),(0,o.kt)("li",{parentName:"ul"},"dkron.serf.queries"),(0,o.kt)("li",{parentName:"ul"},"dkron.serf.queries.execution_done"),(0,o.kt)("li",{parentName:"ul"},"dkron.serf.queries.run_job"),(0,o.kt)("li",{parentName:"ul"},"dkron.serf.query_acks"),(0,o.kt)("li",{parentName:"ul"},"dkron.serf.query_responses"),(0,o.kt)("li",{parentName:"ul"},"dkron.serf.queue.Event"),(0,o.kt)("li",{parentName:"ul"},"dkron.serf.queue.Intent"),(0,o.kt)("li",{parentName:"ul"},"dkron.serf.queue.Query")))}d.isMDXComponent=!0}}]);