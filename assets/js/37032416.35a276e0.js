"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2411],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>m});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function c(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?c(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function u(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},c=Object.keys(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var i=n.createContext({}),s=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},l=function(e){var t=s(e.components);return n.createElement(i.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,c=e.originalType,i=e.parentName,l=u(e,["components","mdxType","originalType","parentName"]),p=s(r),f=o,m=p["".concat(i,".").concat(f)]||p[f]||d[f]||c;return r?n.createElement(m,a(a({ref:t},l),{},{components:r})):n.createElement(m,a({ref:t},l))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var c=r.length,a=new Array(c);a[0]=f;var u={};for(var i in t)hasOwnProperty.call(t,i)&&(u[i]=t[i]);u.originalType=e,u[p]="string"==typeof e?e:o,a[1]=u;for(var s=2;s<c;s++)a[s]=r[s];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},4202:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>a,default:()=>p,frontMatter:()=>c,metadata:()=>u,toc:()=>s});var n=r(7462),o=(r(7294),r(3905));const c={},a="GRPC Executor",u={unversionedId:"usage/executors/grpc",id:"usage/executors/grpc",title:"GRPC Executor",description:"GRPC executor can send a request to a GRPC Server",source:"@site/docs/usage/executors/grpc.md",sourceDirName:"usage/executors",slug:"/usage/executors/grpc",permalink:"/docs/usage/executors/grpc",draft:!1,editUrl:"https://github.com/distribworks/dkron/tree/main/website/docs/docs/usage/executors/grpc.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Executors",permalink:"/docs/usage/executors/"},next:{title:"HTTP Executor",permalink:"/docs/usage/executors/http"}},i={},s=[{value:"Requirements",id:"requirements",level:2},{value:"Configuration",id:"configuration",level:2}],l={toc:s};function p(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"grpc-executor"},"GRPC Executor"),(0,o.kt)("p",null,"GRPC executor can send a request to a GRPC Server"),(0,o.kt)("h2",{id:"requirements"},"Requirements"),(0,o.kt)("p",null,"In order to serialize protobufs the server need's to have the reflection service active.\nWithout that we cannot get proto descriptors required for serialization."),(0,o.kt)("h2",{id:"configuration"},"Configuration"),(0,o.kt)("p",null,"Params:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'"url": Required, Request url\n"body": Optional, POST body\n"timeout": Optional, Request timeout, unit seconds\n"expectCode": Optional, One of https://grpc.github.io/grpc/core/md_doc_statuscodes.html\n')),(0,o.kt)("p",null,"Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "executor": "http",\n  "executor_config": {\n      "url": "127.0.0.1:9000/test.TestService/Test",\n      "body": "{\\"key\\": \\"value\\"}",\n      "timeout": "30",\n      "expectCode": "0"\n  }\n}\n')))}p.isMDXComponent=!0}}]);