"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7505],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>m});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),u=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},l="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),l=u(r),d=o,m=l["".concat(s,".").concat(d)]||l[d]||f[d]||a;return r?n.createElement(m,i(i({ref:t},p),{},{components:r})):n.createElement(m,i({ref:t},p))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c[l]="string"==typeof e?e:o,i[1]=c;for(var u=2;u<a;u++)i[u]=r[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},8832:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>l,frontMatter:()=>a,metadata:()=>c,toc:()=>u});var n=r(7462),o=(r(7294),r(3905));const a={},i="HTTP Executor",c={unversionedId:"usage/executors/http",id:"usage/executors/http",title:"HTTP Executor",description:"HTTP executor can send a request to an HTTP endpoint",source:"@site/docs/usage/executors/http.md",sourceDirName:"usage/executors",slug:"/usage/executors/http",permalink:"/docs/usage/executors/http",draft:!1,editUrl:"https://github.com/distribworks/dkron/tree/main/website/docs/docs/usage/executors/http.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"GRPC Executor",permalink:"/docs/usage/executors/grpc"},next:{title:"Kafka Executor",permalink:"/docs/usage/executors/kafka"}},s={},u=[{value:"Configuration",id:"configuration",level:2}],p={toc:u};function l(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"http-executor"},"HTTP Executor"),(0,o.kt)("p",null,"HTTP executor can send a request to an HTTP endpoint"),(0,o.kt)("h2",{id:"configuration"},"Configuration"),(0,o.kt)("p",null,"Params:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'method:     Request method in uppercase\nurl:        Request url\nheaders:    Json string, such as "[\\"Content-Type: application/json\\"]"\nbody:       POST body\ntimeout:    Request timeout, unit seconds\nexpectCode: Expect response code, such as 200,206\nexpectBody: Expect response body, support regexp, such as /success/\ndebug:      Debug option, will log everything when this option is not empty\ntlsNoVerifyPeer:       false (default) or true. If true, disables verification of the remote SSL certificate\'s validity.\ntlsCertificateFile:    Path to the PEM file containing the client certificate. Optional.\ntlsCertificateKeyFile: Path to the PEM file containing the client certificate private key. Optional.\ntlsRootCAsFile:        Path to the PEM file containing certificates to use as root CAs. Optional.\n')),(0,o.kt)("p",null,"Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "executor": "http",\n  "executor_config": {\n      "method": "GET",\n      "url": "http://example.com",\n      "headers": "[]",\n      "body": "",\n      "timeout": "30",\n      "expectCode": "200",\n      "expectBody": "",\n      "debug": "true"\n  }\n}\n')))}l.isMDXComponent=!0}}]);