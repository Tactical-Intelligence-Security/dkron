"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2411],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return d}});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function u(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?u(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):u(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},u=Object.keys(e);for(n=0;n<u.length;n++)r=u[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var u=Object.getOwnPropertySymbols(e);for(n=0;n<u.length;n++)r=u[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var a=n.createContext({}),s=function(e){var t=n.useContext(a),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},p=function(e){var t=s(e.components);return n.createElement(a.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,u=e.originalType,a=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),f=s(r),d=o,m=f["".concat(a,".").concat(d)]||f[d]||l[d]||u;return r?n.createElement(m,c(c({ref:t},p),{},{components:r})):n.createElement(m,c({ref:t},p))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var u=r.length,c=new Array(u);c[0]=f;var i={};for(var a in t)hasOwnProperty.call(t,a)&&(i[a]=t[a]);i.originalType=e,i.mdxType="string"==typeof e?e:o,c[1]=i;for(var s=2;s<u;s++)c[s]=r[s];return n.createElement.apply(null,c)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},64202:function(e,t,r){r.r(t),r.d(t,{assets:function(){return p},contentTitle:function(){return a},default:function(){return d},frontMatter:function(){return i},metadata:function(){return s},toc:function(){return l}});var n=r(87462),o=r(63366),u=(r(67294),r(3905)),c=["components"],i={},a="GRPC Executor",s={unversionedId:"usage/executors/grpc",id:"usage/executors/grpc",title:"GRPC Executor",description:"GRPC executor can send a request to a GRPC Server",source:"@site/docs/usage/executors/grpc.md",sourceDirName:"usage/executors",slug:"/usage/executors/grpc",permalink:"/docs/usage/executors/grpc",editUrl:"https://github.com/distribworks/dkron/tree/main/website/docs/docs/usage/executors/grpc.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Executors",permalink:"/docs/usage/executors/"},next:{title:"HTTP Executor",permalink:"/docs/usage/executors/http"}},p={},l=[{value:"Requirements",id:"requirements",level:2},{value:"Configuration",id:"configuration",level:2}],f={toc:l};function d(e){var t=e.components,r=(0,o.Z)(e,c);return(0,u.kt)("wrapper",(0,n.Z)({},f,r,{components:t,mdxType:"MDXLayout"}),(0,u.kt)("h1",{id:"grpc-executor"},"GRPC Executor"),(0,u.kt)("p",null,"GRPC executor can send a request to a GRPC Server"),(0,u.kt)("h2",{id:"requirements"},"Requirements"),(0,u.kt)("p",null,"In order to serialize protobufs the server need's to have the reflection service active.\nWithout that we cannot get proto descriptors required for serialization."),(0,u.kt)("h2",{id:"configuration"},"Configuration"),(0,u.kt)("p",null,"Params:"),(0,u.kt)("pre",null,(0,u.kt)("code",{parentName:"pre"},'"url": Required, Request url\n"body": Optional, POST body\n"timeout": Optional, Request timeout, unit seconds\n"expectCode": Optional, One of https://grpc.github.io/grpc/core/md_doc_statuscodes.html\n')),(0,u.kt)("p",null,"Example"),(0,u.kt)("pre",null,(0,u.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "executor": "http",\n  "executor_config": {\n      "url": "127.0.0.1:9000/test.TestService/Test",\n      "body": "{\\"key\\": \\"value\\"}",\n      "timeout": "30",\n      "expectCode": "0"\n  }\n}\n')))}d.isMDXComponent=!0}}]);