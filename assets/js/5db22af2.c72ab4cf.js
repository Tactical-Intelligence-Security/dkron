"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2305],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var d=r.createContext({}),l=function(e){var t=r.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=l(e.components);return r.createElement(d.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,d=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=l(n),f=o,g=u["".concat(d,".").concat(f)]||u[f]||p[f]||a;return n?r.createElement(g,i(i({ref:t},c),{},{components:n})):r.createElement(g,i({ref:t},c))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=f;var s={};for(var d in t)hasOwnProperty.call(t,d)&&(s[d]=t[d]);s.originalType=e,s[u]="string"==typeof e?e:o,i[1]=s;for(var l=2;l<a;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},2681:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var r=n(7462),o=(n(7294),n(3905));const a={date:new Date("2019-03-22T00:00:00.000Z"),title:"dkron agent",slug:"dkron_agent",url:"/v1.2/cli/dkron_agent/"},i=void 0,s={unversionedId:"cli/dkron_agent",id:"version-v1/cli/dkron_agent",title:"dkron agent",description:"dkron agent",source:"@site/versioned_docs/version-v1/cli/dkron_agent.md",sourceDirName:"cli",slug:"/cli/dkron_agent",permalink:"/docs/v1/cli/dkron_agent",draft:!1,editUrl:"https://github.com/distribworks/dkron/tree/main/website/docs/versioned_docs/version-v1/cli/dkron_agent.md",tags:[],version:"v1",frontMatter:{date:"2019-03-22T00:00:00.000Z",title:"dkron agent",slug:"dkron_agent",url:"/v1.2/cli/dkron_agent/"},sidebar:"tutorialSidebar",previous:{title:"dkron",permalink:"/docs/v1/cli/dkron"},next:{title:"dkron doc",permalink:"/docs/v1/cli/dkron_doc"}},d={},l=[{value:"dkron agent",id:"dkron-agent",level:2},{value:"Synopsis",id:"synopsis",level:3},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3},{value:"SEE ALSO",id:"see-also",level:3},{value:"Auto generated by spf13/cobra on 22-Mar-2019",id:"auto-generated-by-spf13cobra-on-22-mar-2019",level:6}],c={toc:l};function u(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"dkron-agent"},"dkron agent"),(0,o.kt)("p",null,"Start a dkron agent"),(0,o.kt)("h3",{id:"synopsis"},"Synopsis"),(0,o.kt)("p",null,"Start a dkron agent that schedule jobs, listen for executions and run executors.\nIt also runs a web UI."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"dkron agent [flags]\n")),(0,o.kt)("h3",{id:"options"},"Options"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'      --advertise-addr string        Address used to advertise to other nodes in the cluster. By default, the bind address is advertised\n      --advertise-rpc-port int       Use the value of rpc-port by default\n      --backend string               Store backend (etcd|etcdv3|consul|zk|redis|boltdb|dynamodb) (default "boltdb")\n      --backend-machine strings      Store backend machines addresses (default [./dkron.db])\n      --backend-password string      Store backend machines password or token, only REDIS/CONSUL\n      --bind-addr string             Address to bind network listeners to (default "0.0.0.0:8946")\n      --dog-statsd-addr string       DataDog Agent address\n      --dog-statsd-tags strings      Datadog tags, specified as key:value\n      --encrypt string               Key for encrypting network traffic. Must be a base64-encoded 16-byte key\n  -h, --help                         help for agent\n      --http-addr string             Address to bind the UI web server to. Only used when server (default ":8080")\n      --join strings                 An initial agent to join with. This flag can be specified multiple times\n      --keyspace string              The keyspace to use. A prefix under all data is stored for this instance (default "dkron")\n      --log-level string             Log level (debug|info|warn|error|fatal|panic) (default "info")\n      --mail-from string             From email address to use\n      --mail-host string             Mail server host address to use for notifications\n      --mail-password string         Mail server password to use\n      --mail-payload string          Notification mail payload\n      --mail-port uint16             Mail server port\n      --mail-subject-prefix string   Notification mail subject prefix (default "[Dkron]")\n      --mail-username string         Mail server username used for authentication\n      --node-name string             Name of this node. Must be unique in the cluster (default "pris.local")\n      --profile string               Profile is used to control the timing profiles used (default "lan")\n      --rpc-port int                 RPC Port used to communicate with clients. Only used when server. The RPC IP Address will be the same as the bind address (default 6868)\n      --server                       This node is running in server mode\n      --statsd-addr string           Statsd address\n      --tag strings                  Tag can be specified multiple times to attach multiple key/value tag pairs to the given node, specified as key=value\n      --webhook-header strings       Headers to use when calling the webhook URL. Can be specified multiple times\n      --webhook-payload string       Body of the POST request to send on webhook call\n      --webhook-url string           Webhook url to call for notifications\n')),(0,o.kt)("h3",{id:"options-inherited-from-parent-commands"},"Options inherited from parent commands"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"      --config string   config file path\n")),(0,o.kt)("h3",{id:"see-also"},"SEE ALSO"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/docs/v1/cli/dkron/"},"dkron"),"\t - Open source distributed job scheduling system")),(0,o.kt)("h6",{id:"auto-generated-by-spf13cobra-on-22-mar-2019"},"Auto generated by spf13/cobra on 22-Mar-2019"))}u.isMDXComponent=!0}}]);