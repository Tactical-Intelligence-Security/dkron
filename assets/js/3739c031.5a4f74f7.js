"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1162],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>m});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=p(r),f=o,m=u["".concat(s,".").concat(f)]||u[f]||d[f]||a;return r?n.createElement(m,l(l({ref:t},c),{},{components:r})):n.createElement(m,l({ref:t},c))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,l=new Array(a);l[0]=f;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[u]="string"==typeof e?e:o,l[1]=i;for(var p=2;p<a;p++)l[p]=r[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},8797:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>p});var n=r(7462),o=(r(7294),r(3905));const a={title:"Upgrade methods"},l=void 0,i={unversionedId:"usage/upgrade",id:"usage/upgrade",title:"Upgrade methods",description:"Use one of the following methods (depending on the changes) to upgrade a cluster to a newer version.",source:"@site/docs/usage/upgrade.md",sourceDirName:"usage",slug:"/usage/upgrade",permalink:"/docs/usage/upgrade",draft:!1,editUrl:"https://github.com/distribworks/dkron/tree/main/website/docs/docs/usage/upgrade.md",tags:[],version:"current",frontMatter:{title:"Upgrade methods"},sidebar:"tutorialSidebar",previous:{title:"Target nodes spec",permalink:"/docs/usage/target-nodes-spec"},next:{title:"dkron",permalink:"/docs/cli/dkron"}},s={},p=[{value:"Rolling upgrade",id:"rolling-upgrade",level:3},{value:"Backup &amp; Restore",id:"backup--restore",level:3}],c={toc:p};function u(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Use one of the following methods (depending on the changes) to upgrade a cluster to a newer version."),(0,o.kt)("h3",{id:"rolling-upgrade"},"Rolling upgrade"),(0,o.kt)("p",null,"Use the following procedure to rotate all cluster nodes, one server at a time:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Add a new server to the cluster with a configuration that joins them to the existing cluster."),(0,o.kt)("li",{parentName:"ol"},"Stop dkron service on one of the old servers, if it was the leader allow a new leader to be elected. Note that it is better to remove the current leader at the end, to ensure a leader is elected from the new nodes."),(0,o.kt)("li",{parentName:"ol"},"Use ",(0,o.kt)("inlineCode",{parentName:"li"},"dkron raft list-peers")," to list current cluster nodes."),(0,o.kt)("li",{parentName:"ol"},"Use ",(0,o.kt)("inlineCode",{parentName:"li"},"dkron raft remove-peer")," to forcefully remove the old server."),(0,o.kt)("li",{parentName:"ol"},"Repeat steps above until all old cluster nodes have been upgraded.")),(0,o.kt)("h3",{id:"backup--restore"},"Backup & Restore"),(0,o.kt)("p",null,"Use the ",(0,o.kt)("inlineCode",{parentName:"p"},"/restore")," API endpoint to restore a previously exported jobs file"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"curl localhost:8080/v1/jobs > backup.json\ncurl localhost:8080/v1/restore --form 'file=@backup.json'\n")),(0,o.kt)("p",null,"This will restore all jobs and counters as they were in the export file."))}u.isMDXComponent=!0}}]);