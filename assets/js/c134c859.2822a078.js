"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2114],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i=r.createContext({}),u=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(i.Provider,{value:t},e.children)},l="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,s=e.originalType,i=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),l=u(n),m=o,f=l["".concat(i,".").concat(m)]||l[m]||d[m]||s;return n?r.createElement(f,a(a({ref:t},p),{},{components:n})):r.createElement(f,a({ref:t},p))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var s=n.length,a=new Array(s);a[0]=m;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c[l]="string"==typeof e?e:o,a[1]=c;for(var u=2;u<s;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7401:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>a,default:()=>l,frontMatter:()=>s,metadata:()=>c,toc:()=>u});var r=n(7462),o=(n(7294),n(3905));const s={title:"HTTP Executor"},a=void 0,c={unversionedId:"usage/executors/http",id:"version-v1/usage/executors/http",title:"HTTP Executor",description:"HTTP executor can send a request to an HTTP endpoint",source:"@site/versioned_docs/version-v1/usage/executors/http.md",sourceDirName:"usage/executors",slug:"/usage/executors/http",permalink:"/docs/v1/usage/executors/http",draft:!1,editUrl:"https://github.com/distribworks/dkron/tree/main/website/docs/versioned_docs/version-v1/usage/executors/http.md",tags:[],version:"v1",frontMatter:{title:"HTTP Executor"},sidebar:"tutorialSidebar",previous:{title:"Use with AWS ECS",permalink:"/docs/v1/usage/ecs"},next:{title:"shell",permalink:"/docs/v1/usage/executors/shell"}},i={},u=[{value:"Configuration",id:"configuration",level:2}],p={toc:u};function l(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"HTTP executor can send a request to an HTTP endpoint"),(0,o.kt)("h2",{id:"configuration"},"Configuration"),(0,o.kt)("p",null,"Params:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'method: Request method in uppercase\nurl: Request url\nheaders: Json string, such as "[\\"Content-Type: application/json\\"]"\nbody: POST body\ntimeout: Request timeout, unit seconds\nexpectCode: Expect response code, such as 200,206\nexpectBody: Expect response body, support regexp, such as /success/\ndebug: Debug option, will log everything when this option is not empty\n')),(0,o.kt)("p",null,"Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "executor": "http",\n  "executor_config": {\n      "method": "GET",\n      "url": "http://example.com",\n      "headers": "[]",\n      "body": "",\n      "timeout": "30",\n      "expectCode": "200",\n      "expectBody": "",\n      "debug": "true"\n  }\n}\n')))}l.isMDXComponent=!0}}]);